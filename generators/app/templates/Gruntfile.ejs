module.exports = function (grunt) {
  require("load-grunt-tasks")(grunt);

  var scriptsSrc = "<%= obfSource %>";
  var libSrc = "<%= libPath %>";
  var destination = "<%= obfDest %>";
  var packageLibDest = destination + "lib/";

  grunt.registerTask("default", [
    "clean:all",<% if(!useWebpack) {%>
    "copy:nonJsSource",<% } %><%
    if (useTypeInfo && language === "es6") { %>
    "copy:typeinfo",<% } %>
    "package"<% if(!useWebpack) {%>,
    "copy:license",<% if (loadingType === "systemjs") { %>
    "copy:systemjs",<% }
    if (useBrowserify) {%>
    "browserify"<%
    }} %>
  ]);
  <% if (!useWebpack) {%>
  grunt.registerTask("dev-server", "Starts a dev server.", "express:dev", "watch"]);
  <% } %>
  grunt.initConfig({
    pkg: grunt.file.readJSON("package.json"),
    package: {
      options: {
        libSrc: libSrc,
        libDest: packageLibDest,
        modules: [
          "yfiles/es2015-shim",
          "yfiles/lang"<% modules.forEach(function (module) { %>,
          "<%= module %>"<%}); %>
        ],
        files: [{
          expand: true,
          cwd: scriptsSrc,
          src: ["**/*.js", "!**/license.js"],
          dest: destination
        }<% if (!(useBrowserify || useWebpack) || language === "typescript") { %>, {
          expand: true,
          cwd: "./bower_components/requirejs/",
          src: ["require.js"],
          dest: destination
        }<% }
        if (language === "typescript") { %>, {
          expand: true,
          cwd: scriptsSrc,
          src: ["**/*.js"<% if (!useWebpack) { %>, "!**/license.js"<% } %>%>],
          dest: destination
        }<% } %>],
        obfuscate: true,
        optimize: true
      },
      build: {
        // This empty target is required for technical reasons. Don't remove it.
      }
    },
    clean: {
      // Without the 'force' option, this task cannot delete files outside this file's subtree
      options: {force: true},
      // Remove all created files in the destination directories.
      all: [destination, packageLibDest]
    }<% if (!useWebpack) {%>,
    copy: {
      // Copies non-JavaScript source code files to the destination.
      nonJsSource: {
        files: [{
          // copy resources
          expand: true,
          cwd: source,
          src: ["**", "!**/*.js", <% if (language === "typescript") { %>"!**/*.ts*", <% } %>"!lib**", "!lib/yfiles**"],
          dest: destination
        }]
      }<% if (!useWebpack) { %>,
      license: {
        // The license must not be obfuscated. Therefore, it is copied separately.
        expand: true,
        cwd: scriptsSrc,
        src: ["license.js"],
        dest: scriptsDest
      }<% }
      if (loadingType === "systemjs") { %>,
      systemjs: {
        expand: true,
        cwd: "./bower_components/system.js/dist",
        src: ["*.js"],
        dest: destination + "lib/system.js"
      }<% }
      if (useTypeInfo && language === "es6") { %>,
      typeinfo: {
        expand: true,
        cwd: scriptsSrc,
        src: "yfiles-typeinfo.js",
        dest: scriptsDest
      }<% } %>
    },
    browserify: {
      dist: {
        <% if (!useBrowserify) {
        %>options: {
          browserifyOptions: {
            standalone: "yfiles",
            paths: packageLibDest
          }
        },
        src: [packageLibDest + "yfiles/modules-bundle.js"],
        dest: destination + "lib/yfiles.js"<%
        } else {
        %>src: [packageLibDest + <% if (language === "typescript") { %>"modules.js"<% } else { %>applicationName<% } %>],
        dest: scriptsDest + applicationName<%
        } %>
      }<% if (useBrowserify) { %>,
      options:{
        plugin: [
          [
            'remapify', [{
              src: '**/*.js',
              expose: 'yfiles',
              cwd: __dirname + "/build/lib/yfiles"
            }]
          ]
        ]
      }<% } %>
    },
    watch: {
      scripts: {
        files: [scriptsSrc + "**/*.js"],
        tasks: ["default"],
        options: {
          spawn: false
        }
      }
    },
    express: {
      options: {},
      dev: {
        options: {
          script: "server.js"
        }
      }
    }<% } if (language === "typescript") { %>,
    typescript: {
      base: {
        src: [scriptsSrc + "**/*.ts"],
        dest: packageLibDest,
        options: {
          module: <% if (useWebpack || useBrowserify) { %>"commonjs"<% } else { %>"amd"<% } %>,
          target: "es5",
          removeComments: true
        }
      }
    }<% } else if (useBabel) { %>,
    babel: {
      options: {
        presets: [require.resolve('babel-preset-es2015')],
        compact: false
      },
      dist: {
        files: [{
          expand: true,
          cwd: scriptsSrc,
          src: ["**.js"],
          dest: packageLibDest
        }]
      }
    }<% } %>
  });
};
